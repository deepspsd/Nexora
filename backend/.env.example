# ============================================================================
# NEXORA Backend Environment Variables
# ============================================================================
# Copy this file to .env and fill in your actual values

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=your_database_password
DB_NAME=nexora
DB_PORT=3306

# ============================================================================
# JWT AUTHENTICATION
# ============================================================================
# Generate a secure secret: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRATION_HOURS=24
JWT_REFRESH_EXPIRATION_DAYS=30

# ============================================================================
# AI MODEL API KEYS
# ============================================================================
# Hugging Face Token (for DeepSeek via HF Router)
HF_TOKEN=your_huggingface_token

# Groq API Key (for fast inference)
GROQ_API_KEY=your_groq_api_key

# Kimi API Key (optional fallback)
KIMI_API_KEY=your_kimi_api_key

# ============================================================================
# OAUTH PROVIDERS
# ============================================================================
# Google OAuth
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret
GOOGLE_REDIRECT_URI=http://localhost:3000/auth/google/callback

# GitHub OAuth
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret
GITHUB_REDIRECT_URI=http://localhost:3000/auth/github/callback

# ============================================================================
# EXTERNAL SERVICES
# ============================================================================
# E2B Sandbox (for code execution)
E2B_API_KEY=your_e2b_api_key

# Firecrawl (for web scraping)
FIRECRAWL_API_KEY=your_firecrawl_api_key

# ============================================================================
# ERROR MONITORING
# ============================================================================
# Sentry DSN (optional)
SENTRY_DSN=your_sentry_dsn
ENVIRONMENT=development

# ============================================================================
# PAYMENT PROVIDERS (Free Tier)
# ============================================================================
# Razorpay (India - Free tier available)
# Sign up at: https://razorpay.com/
# Get test keys from: Dashboard > Settings > API Keys > Generate Test Key
RAZORPAY_KEY_ID=rzp_test_your_key_id
RAZORPAY_KEY_SECRET=your_razorpay_key_secret

# Stripe (Test Mode - Free)
# Sign up at: https://stripe.com/
# Get test keys from: Dashboard > Developers > API keys
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_test_key
STRIPE_SECRET_KEY=sk_test_your_stripe_test_secret
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# Note: For testing, use Razorpay test mode with test cards:
# Card: 4111 1111 1111 1111, CVV: Any 3 digits, Expiry: Any future date

# ============================================================================
# REDIS (Optional - for caching)
# ============================================================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# ============================================================================
# APPLICATION SETTINGS
# ============================================================================
# API Rate Limiting
RATE_LIMIT_ENABLED=true

# CORS Origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# Log Level
LOG_LEVEL=INFO

# ============================================================================
# AI MODEL ROUTING CONFIGURATION
# ============================================================================
# Primary model for MVP generation
MVP_PRIMARY_MODEL=deepseek

# Primary model for other tasks (idea validation, business planning, etc.)
GENERAL_PRIMARY_MODEL=groq

# Fallback model when primary fails
FALLBACK_MODEL=kimi

# Model preferences (comma-separated priority order)
MODEL_PRIORITY=deepseek,groq,kimi
